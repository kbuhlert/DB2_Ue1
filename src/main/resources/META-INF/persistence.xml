<?xml version="1.0" encoding="UTF-8" ?>
<persistence version="2.2" xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_2.xsd">

    <persistence-unit name="nameOfJpaPersistenceUnit" transaction-type="RESOURCE_LOCAL">
        <!--
        Auflistung der Klassen, die von dieser PersistenceUnit verwaltet werden
        -->
        <class>at.campus02.DB2_DAO.Customer</class>
        <properties>
            <!--
            Generelle Settings wie JDBC Url und Klassenname des verwendeten Treibers
            -->
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:derby:database;create=true"/>
            <property name="javax.persistence.jdbc.driver"
                      value="org.apache.derby.jdbc.EmbeddedDriver"/>    <!--Wie nehmen Embedded Driver, weil Treiber in der??>
            <!-
            Settings des PersistenceProviders sind ebenfalls möglich.
            In dem Fall möchten wir alle Tabellen beim Start der Verbindung löschen und neu anlegen. ("drop-and-create-tables", nur "create-tables" geht auch)
           eclipselink ist Link zu PersistenceProvider
            -->
            <property name="eclipselink.ddl-generation"
                      value="drop-and-create-tables"/>
        </properties>
    </persistence-unit>
</persistence>